
/**
 * This is the main entry point.
 */

class Main

  help = "Usage: it has one parameter, a YAML file containing the operations."

  read_file (file_name : String) : String =
    @new String (Files .readAllBytes (Paths .get (file_name) ) )

  market_builder = MarketBuilder .mk

  empty_market = market_builder .empty_market

  yaml_parser = YamlParser .mk

  yaml_serializer = YamlSerializer .mk

  operation_parser = OperationParser .mk

  operation_processor = OperationProcessor .mk

  process_file (file_name : String) : Option [Market] =
    market_builder
      .build (
         operation_parser .parse (
           yaml_parser .parse ( @new StringReader (read_file (file_name) ) )
         )
      )

  serialize_market (maybe_market : Option [Market] ) : String =
    match maybe_market
      case Some (market) ==> yaml_serializer .serialize_market (market)
      case None ==> "Undefined market"

  execute (arguments : List [String] ) : Unit =
    if arguments .length > 0
    then println (serialize_market (process_file (arguments .apply (0) ) ) )
    else println (help)

  main (arguments : Array [String] ) : Unit =
    execute (arguments .toList)

end

